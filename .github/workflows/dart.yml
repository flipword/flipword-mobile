name: Dart CI

on:
  push:
  pull_request:
    branches:
      - "master"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v1.5.0
        with:
          channel: master

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Checkout gallery code
        uses: actions/checkout@v2

      - name: Pub get
        run: flutter pub get

      - name: Analyse code
        run: dartanalyzer lib

  build-android:
    runs-on: ubuntu-latest
    needs: [ lint ]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout gallery code
        uses: actions/checkout@v2

      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Clone Flutter repository
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'

      - name: Pub get
        run: flutter pub get

      - name: Decode secrets properties files
        run: touch .env; echo "AZURE_TRANSLATE_KEY=$AZURE_TRANSLATE_KEY" > .env; echo "$SECRETS_PROPERTIES" | base64 -d > ./android/key.properties;echo "$SECRETS_KEY" | base64 -d > ./android/upload-keystore.jks;echo "$GOOGLE_SERVICE" | base64 -d > ./android/app/google-services.json
        env:
          SECRETS_PROPERTIES: ${{ secrets.SECRETS_PROPERTIES }}
          SECRETS_KEY: ${{ secrets.SECRETS_KEY }}
          GOOGLE_SERVICE: ${{ secrets.GOOGLE_SERVICE }}

      - name: Build appBundle
        run: flutter build appbundle

      - name: Upload appBundle
        uses: actions/upload-artifact@v2
        with:
          name: appBundle
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest
    needs: [ lint ]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout gallery code
        uses: actions/checkout@v2

      - name: Install python and codemagic tools
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install python dependencies
        run: python -m pip install codemagic-cli-tools

      - name: Create Folder for certificates and profiles
        run: |
          mkdir -p ./keys
          mkdir -p ~/private_keys

      - name: Decode secrets properties files
        run: |
          touch .env
          echo "AZURE_TRANSLATE_KEY=$AZURE_TRANSLATE_KEY" > .env
          echo "$IOS_GOOGLE_SERVICE" | base64 -d > ./ios/Runner/GoogleService-Info.plist
          echo "$APP_STORE_CONNECT_P8" | base64 -d > ~/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY.p8
          cd ./keys
          ssh-keygen -t rsa -b 2048 -m PEM -f cert_key -q -N ""
        env:
          AZURE_TRANSLATE_KEY: ${{ secrets.AZURE_TRANSLATE_KEY }}
          IOS_GOOGLE_SERVICE: ${{ secrets.IOS_GOOGLE_SERVICE }}
          P12_CER_BASE64: ${{ secrets.P12_CER_BASE64 }}
          MOBILEPROVISION_BASE64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APP_STORE_CONNECT_P8: ${{ secrets.APP_STORE_CONNECT_P8 }}
          IOS_DISTRIBUTION_CER: ${{ secrets.IOS_DISTRIBUTION_CER }}

      - name: Install python and codemagic tools
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install python dependencies
        run: python -m pip install codemagic-cli-tools

      - name: Initialize Keychain with certificate
        run: |
          keychain initialize
          keychain use-login
          ls ./keys
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) \
              --platform IOS \
              --type IOS_APP_STORE \
              --certificate-key=@file:./keys/cert_key \
              --issuer-id @env:IOS_ISSUER_ID \
              --key-id @env:APP_STORE_CONNECT_API_KEY
              --create
          keychain add-certificates
          xcode-project use-profiles
        env:
          IOS_ISSUER_ID: ${{ secrets.IOS_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v1.5.0
        with:
          channel: master

      - name: Pub get
        run: flutter pub get

      - name: Building IPA
        run: |
          flutter build ios --release --no-codesign --verbose
          xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner --config Release --verbose

      - name: Publish IPA on appstoreconnect
        run: app-store-connect publish --path build/ios/ipa/*.ipa --issuer-id @env:IOS_ISSUER_ID --key-id @env:APP_STORE_CONNECT_API_KEY --verbose
        env:
          IOS_ISSUER_ID: ${{ secrets.IOS_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: adhoc-ipa
          path: build/ios/ipa/*.ipa